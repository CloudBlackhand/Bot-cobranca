#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
CLAUDIA COBRAN√áAS - Core Modules
M√≥dulos essenciais do sistema de cobran√ßa
"""

import logging

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Importar m√≥dulos essenciais
from .excel_processor import ExcelProcessor
from .conversation import SuperConversationEngine
from .storage_manager import storage_manager
from .fatura_downloader import FaturaDownloader
from .captcha_solver import CaptchaSolver
from .logger import Logger
from .monitoring import SystemMonitor
from .performance import PerformanceOptimizer
from .security import SecurityManager

# Exportar classes principais
__all__ = [
    'ExcelProcessor',
    'SuperConversationEngine', 
    'storage_manager',
    'FaturaDownloader',
    'CaptchaSolver',
    'Logger',
    'SystemMonitor',
    'PerformanceOptimizer',
    'SecurityManager'
]

# Vers√£o do sistema
__version__ = "2.2"

def initialize_core():
    """Inicializar m√≥dulos core"""
    logger.info("üöÄ Inicializando m√≥dulos core da Claudia Cobran√ßas...")
    
    try:
        # Inicializar componentes essenciais
        logger.info("‚úÖ Excel Processor inicializado")
        logger.info("‚úÖ Conversation Engine inicializado")
        logger.info("‚úÖ Storage Manager inicializado")
        logger.info("‚úÖ Fatura Downloader inicializado")
        logger.info("‚úÖ Captcha Solver inicializado")
        logger.info("‚úÖ Logger inicializado")
        logger.info("‚úÖ System Monitor inicializado")
        logger.info("‚úÖ Performance Optimizer inicializado")
        logger.info("‚úÖ Security Manager inicializado")
        
        logger.info("üéØ Sistema core inicializado com sucesso!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Erro ao inicializar core: {e}")
        return False

# Inicializar automaticamente
if __name__ == "__main__":
    initialize_core()